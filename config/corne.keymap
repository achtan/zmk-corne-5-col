/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

&mmv {
    time-to-max-speed-ms = <680>;
    acceleration-exponent = <2>;
};

/ {
    behaviors {
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            require-prior-idle-ms = <150>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 38 37 36>;
            require-prior-idle-ms = <150>;
        };
    };

    combos {
        compatible = "zmk,combos";

        caps-combo {
            bindings = <&caps_word>;
            key-positions = <16 19>;
        };

        kp_ {
            bindings = <&kp UNDERSCORE>;
            key-positions = <29 30>;
            layers = <2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q                &kp W              &kp E                  &kp R                 &kp T        &kp Y            &kp U                &kp I             &kp O               &kp P                        &none
&none  &hml LEFT_CONTROL A  &hml LEFT_SHIFT S  &hml LEFT_ALT D        &hml RIGHT_COMMAND F  &kp G        &kp H            &hmr LEFT_COMMAND J  &hmr RIGHT_ALT K  &hmr RIGHT_SHIFT L  &hmr LEFT_CONTROL SEMICOLON  &none
&none  &kp Z                &kp X              &kp C                  &kp V                 &kp B        &kp N            &kp M                &kp COMMA         &kp DOT             &kp FSLH                     &none
                                               &mt LEFT_SHIFT ESCAPE  &lt 1 SPACE           &lt 2 TAB    &lt 2 BACKSPACE  &kp ENTER            &kp RIGHT_SHIFT
            >;
        };

        nav {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &trans         &trans  &trans  &trans  &trans    &trans    &mkp LCLK      &mkp RCLK    &trans     &trans  &none
&none  &trans         &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &trans  &none
&none  &kp LG(TILDE)  &trans  &trans  &trans  &trans    &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &trans  &none
                              &trans  &trans  &trans    &trans    &trans         &trans
            >;
        };

        num {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp EXCL                &kp AT              &kp LEFT_BRACE                  &kp RIGHT_BRACE          &kp PIPE         &kp MINUS  &kp N7                &kp N8             &kp N9          &kp ASTERISK            &none
&none  &hml LEFT_CONTROL HASH  &hml LSHIFT DOLLAR  &hml LEFT_ALT LEFT_PARENTHESIS  &hml RIGHT_COMMAND RPAR  &kp AMPERSAND    &kp EQUAL  &hml LEFT_COMMAND N4  &hml RIGHT_ALT N5  &hml RSHIFT N6  &hml RIGHT_CONTROL SQT  &none
&none  &kp GRAVE               &kp CARET           &kp LBKT                        &kp RBKT                 &kp TILDE        &kp PLUS   &kp NUMBER_1          &kp NUMBER_2       &mt PERIOD N3   &kp BACKSLASH           &none
                                                   &trans                          &trans                   &trans           &trans     &trans                &kp N0
            >;
        };

        media {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp K_MUTE        &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp C_PLAY_PAUSE  &kp C_PREV         &kp C_NEXT       &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans            &trans             &trans           &trans  &trans
                        &trans  &trans  &trans    &trans  &trans            &trans
            >;
        };
    };
};
